Performing C++ SOURCE FILE Test FRUIT_HAS_CLANG_ARBITRARY_OVERLOAD_RESOLUTION_BUG failed with the following output:
Change Dir: /home/david/googlefruit-example/build/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_2389e/fast"
/usr/bin/make -f CMakeFiles/cmTC_2389e.dir/build.make CMakeFiles/cmTC_2389e.dir/build
make[1]: Entering directory '/home/david/googlefruit-example/build/CMakeFiles/CMakeTmp'
Building CXX object CMakeFiles/cmTC_2389e.dir/src.cxx.o
/usr/bin/c++   -DNDEBUG  -Wall -Wno-sign-compare -g -std=c++0x -O4 -DFRUIT_HAS_CLANG_ARBITRARY_OVERLOAD_RESOLUTION_BUG   -Wall -Wno-sign-compare -g -std=c++0x -O4 -std=c++11 -W -Wall -O2 -o CMakeFiles/cmTC_2389e.dir/src.cxx.o -c /home/david/googlefruit-example/build/CMakeFiles/CMakeTmp/src.cxx
/home/david/googlefruit-example/build/CMakeFiles/CMakeTmp/src.cxx: In function ‘int main()’:
/home/david/googlefruit-example/build/CMakeFiles/CMakeTmp/src.cxx:11:12: error: no matching function for call to ‘f(Map*)’
   f((Map*)0);
            ^
/home/david/googlefruit-example/build/CMakeFiles/CMakeTmp/src.cxx:8:7: note: candidate: template<class Value> Value f(Pair<int, Value>*)
 Value f(Pair<int, Value>*) { return Value(); }
       ^
/home/david/googlefruit-example/build/CMakeFiles/CMakeTmp/src.cxx:8:7: note:   template argument deduction/substitution failed:
/home/david/googlefruit-example/build/CMakeFiles/CMakeTmp/src.cxx:11:12: note:   ‘Pair<int, Value>’ is an ambiguous base class of ‘Map’
   f((Map*)0);
            ^
CMakeFiles/cmTC_2389e.dir/build.make:65: recipe for target 'CMakeFiles/cmTC_2389e.dir/src.cxx.o' failed
make[1]: *** [CMakeFiles/cmTC_2389e.dir/src.cxx.o] Error 1
make[1]: Leaving directory '/home/david/googlefruit-example/build/CMakeFiles/CMakeTmp'
Makefile:126: recipe for target 'cmTC_2389e/fast' failed
make: *** [cmTC_2389e/fast] Error 2

Source file was:

template <typename T, typename U>
struct Pair {};

struct Map : public Pair<int, float>, Pair<int, char> {};

template <typename Value>
Value f(Pair<int, Value>*) { return Value(); }

int main() {
  f((Map*)0);
}

